Reqûete 1 :

SELECT COUNT(*) AS nb_appartements_vendus
FROM Vente v
JOIN bien b ON v.Id_bien = b.Id_bien
WHERE b.Type_local = 'appartement'
   AND v.Date_mutation BETWEEN '2020-01-01' AND '2020-06-30';




Reqûete 2 :

SELECT r.reg_nom AS region, COUNT(*) AS nb_ventes
FROM Vente v
JOIN bien b ON v.Id_bien = b.Id_bien
JOIN Commune c  on b.id_codedep_codecommune = c.id_codedep_codecommune
JOIN Departement d ON c.dep_code = d.dep_code
JOIN Region r ON d. reg_code = r.reg_code
WHERE b.Type_local = 'Appartement'
   AND v.Date_mutation BETWEEN '2020-01-01' AND '2020-06-30'
GROUP BY r.reg_nom
ORDER BY nb_ventes DESC;


Requête 3 :

SELECT
   b.Nombre_pieces_principales AS nb_pieces,
   ROUND(COUNT(*) * 100.0 / (SELECT COUNT(*)
                                              FROM Vente v
                                              JOIN Bien b On v.Id_bien = b.Id_bien
                                              WHERE b.Type_local = 'Appartement'), 2) AS pourcentage
FROM Vente v 
JOIN bien b ON v.Id_bien = b.Id_bien
WHERE b.Type_local = 'Appartement'
GROUP BY Nombre_pieces_principales
ORDER BY nb_pieces;


Requête 4 :

SELECT 
   d.dep_nom AS departement,
   ROUND(AVG(v.Valeur_fonciere / b.Surface_Carrez_du_1er_lot), 2) AS prix_m2_moyen
FROM Vente v
JOIN Bien b ON v.Id_bien = b.Id_bien
JOIN Commune c ON b.Id_codedep_codecommune = c.Id_codedep_codecommune
JOIN Departement d ON c.dep_code = d.dep_code
WHERE b.Surface_Carrez_du_1er_lot >0
   AND v.Valeur_fonciere > 0
GROUP BY d.dep_nom
ORDER BY prix_m2_moyen DESC
LIMIT 10;



Requête 5:


SELECT 
   ROUND(AVG(v.Valeur_fonciere / b.Surface_Carrez_du_1er_lot), 2) AS prix_m2_moyen_maison_idf
FROM Vente v
JOIN Bien b ON v.Id_bien = b.Id_bien
JOIN Commune c ON b.Id_codedep_codecommune = c.Id_codedep_codecommune
JOIN Departement d ON c.dep_code = d.dep_code
JOIN Region r ON d.reg_code = r.reg_code
WHERE b.Type_local ='Maison'
   AND r.reg_nom = 'Île-de-France'
   AND b.Surface_Carrez_du_1er_lot >0
   AND v.Valeur_fonciere >0;


Requête 6 :


SELECT 
   v.Id_vente,
   v.Valeur_fonciere,
   r.reg_nom AS region,
   b.Surface_Carrez_du_1er_lot AS surface_m2
FROM Vente v
JOIN Bien b ON v.Id_bien = b.Id_bien
JOIN Commune c ON b.Id_codedep_codecommune = c.Id_codedep_codecommune
JOIN Departement d ON c.dep_code = d.dep_code
JOIN Region r ON d.reg_code = r.reg_code
WHERE b.Type_local = 'Appartement'
   AND v.Valeur_fonciere > 0
   AND b.Surface_Carrez_du_1er_lot >0
ORDER BY v.Valeur_fonciere DESC
LIMIT 10;


Requête 7 :


SELECT 
   ROUND(
   (
      (SELECT COUNT(*) FROM Vente WHERE Date_mutation BETWEEN '2020-04-01' AND  '2020-06-30')-
      (SELECT COUNT(*) FROM Vente WHERE Date_mutation BETWEEN '2020-01-01' AND  '2020-03-31')
   ) * 100.0 /
(SELECT COUNT(*) FROM Vente WHERE Date_mutation BETWEEN '2020-01-01' AND  '2020-03-31'), 2
) AS taux_evolution_ventes_pourcent;


Requête 8:

SELECT 
   r.reg_nom AS region,
   ROUND(AVG(v.Valeur_fonciere / b.Surface_Carrez_du_1er_lot), 2) AS prix_m2_moyen
FROM Vente v
JOIN Bien b ON v.Id_bien = b.Id_bien
JOIN Commune c ON b.Id_codedep_codecommune = c.Id_codedep_codecommune
JOIN Departement d ON c.dep_code = d.dep_code
JOIN Region r ON d.reg_code = r.reg_code
WHERE b.Type_local = 'Appartement'
   AND b.nombre_pieces_principales > 4 
   AND b.Surface_Carrez_du_1er_lot > 0
   AND v.Valeur_fonciere >0
GROUP BY r.reg_nom
ORDER BY prix_m2_moyen DESC;

Requête 9 :


SELECT 
  c.com_nom AS commune,
  COUNT(*) AS nb_ventes
FROM Vente v
JOIN Bien b ON v.Id_bien = b.Id_bien
JOIN Commune c ON b.Id_codedep_codecommune = c.Id_codedep_codecommune
WHERE v.Date_mutation BETWEEN '2020-01-01' AND '2020-03-31'
GROUP BY c.com_nom
HAVING COUNT(*) >= 50
ORDER BY nb_ventes DESC;


Requête 10 :

SELECT 
  ROUND(
     (
      AVG(CASE WHEN b.Nombre_pieces_principales = 3
                        THEN v.Valeur_fonciere /b.Surface_Carrez_du_1er_lot END)
      -
      AVG(CASE WHEN b.Nombre_pieces_principales = 2
                        THEN v.Valeur_fonciere /b.Surface_Carrez_du_1er_lot END)
      )
      * 100
      /
      AVG(CASE WHEN b.Nombre_pieces_principales = 2
                        THEN v.Valeur_fonciere /b.Surface_Carrez_du_1er_lot END)
      ,2
  ) AS diff_pct_3_vs_2p
FROM Vente v
JOIN Bien b ON v.Id_bien = b.Id_bien

WHERE Type_local = 'Appartement'
   AND b.Nombre_pieces_principales IN (2,3)
   AND b.Surface_Carrez_du_1er_lot
   AND v.Valeur_fonciere >0;

Requête 11:

WITH top3 AS (
   SELECT d.dep_code,
   c.com_nom AS commune,
   AVG(v.Valeur_fonciere) AS valeur_moyenne,
   ROW_NUMBER() OVER (
   PARTITION BY d.dep_code
   ORDER BY AVG(v.Valeur_fonciere) DESC
   ) AS rn
FROM Vente v
JOIN Bien b ON v.Id_bien = b.Id_bien
JOIN Commune c ON b.Id_codedep_codecommune = c.Id_codedep_codecommune
JOIN Departement d ON c.dep_code = d.dep_code
WHERE d.dep_code IN ( '06', '13', '33', '59', '69')
GROUP BY d.dep_code, c.com_nom
)
SELECT dep_code, commune, ROUND (valeur_moyenne, 2) AS valeur_moyenne
FROM top3
WHERE rn <= 3
ORDER BY dep_code, valeur_moyenne DESC;


Requête 12 :


SELECT
   c.Id_codedep_codecommune,
   c.com_nom,
   ROUND((COUNT(v.Id_vente) / c.PTOT) * 1000, 2) AS ventes_pour_1000_habitants,
   ROUND(AVG(v.Valeur_fonciere), 2) AS valeur_fonciere_moyenne,
   ROUND(AVG(b.Surface_Carrez_du_1er_lot), 2) AS surface_carrez_moyenne
FROM commune c
JOIN Bien b ON b.Id_codedep_codecommune = c.Id_codedep_codecommune
JOIN vente v ON v.Id_bien = b.Id_bien
WHERE PTOT >10000
GROUP BY c.Id_codedep_codecommune, c.com_nom, c.PTOT
ORDER BY ventes_pour_1000_habitants DESC
LIMIT 20;




